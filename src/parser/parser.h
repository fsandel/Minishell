/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   parser.h                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: fsandel <fsandel@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/01/29 12:03:08 by fsandel           #+#    #+#             */
/*   Updated: 2023/02/10 10:32:34 by fsandel          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

//				██╗  ██╗███████╗ █████╗ ██████╗ ███████╗██████╗
//				██║  ██║██╔════╝██╔══██╗██╔══██╗██╔════╝██╔══██╗
//				███████║█████╗  ███████║██║  ██║█████╗  ██████╔╝
//				██╔══██║██╔══╝  ██╔══██║██║  ██║██╔══╝  ██╔══██╗
//				██║  ██║███████╗██║  ██║██████╔╝███████╗██║  ██║
//				╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝

#ifndef PARSER_H
# define PARSER_H

# include "minishell.h"

//==============================================================================
//--------------------------------parser.c--------------------------------------
//==============================================================================
t_pars	**parser(t_list *list, char **env);

//==============================================================================
//--------------------------------redirect_out.c--------------------------------
//==============================================================================
void	redirect_out(t_list *list, t_pars *pars);
void	redirect_err(t_list *list, t_pars *pars);
void	redirect_both(t_list *list, t_pars *pars);

//==============================================================================
//--------------------------------redirect_append.c-----------------------------
//==============================================================================
void	append_out(t_list *list, t_pars *pars);
void	append_err(t_list *list, t_pars *pars);
void	append_both(t_list *list, t_pars *pars);

//==============================================================================
//--------------------------------redirect_in.c---------------------------------
//==============================================================================
void	redirect_in(t_list *list, t_pars *pars);
void	here_doc(t_list *list, t_pars *pars);

//==============================================================================
//--------------------------------redirect_in.c---------------------------------
//==============================================================================
void	free_struct(t_pars **pars);

#endif